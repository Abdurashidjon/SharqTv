// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: respondent_inquiry_service.proto

package inquiry_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllRespondentInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset    int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	InquiryId string `protobuf:"bytes,3,opt,name=inquiry_id,json=inquiryId,proto3" json:"inquiry_id,omitempty"`
	StatusId  string `protobuf:"bytes,4,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
}

func (x *GetAllRespondentInquiryRequest) Reset() {
	*x = GetAllRespondentInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_respondent_inquiry_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRespondentInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRespondentInquiryRequest) ProtoMessage() {}

func (x *GetAllRespondentInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_respondent_inquiry_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRespondentInquiryRequest.ProtoReflect.Descriptor instead.
func (*GetAllRespondentInquiryRequest) Descriptor() ([]byte, []int) {
	return file_respondent_inquiry_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllRespondentInquiryRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAllRespondentInquiryRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllRespondentInquiryRequest) GetInquiryId() string {
	if x != nil {
		return x.InquiryId
	}
	return ""
}

func (x *GetAllRespondentInquiryRequest) GetStatusId() string {
	if x != nil {
		return x.StatusId
	}
	return ""
}

type UpdateRespondentInquiryTimeTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespondentId string `protobuf:"bytes,1,opt,name=respondent_id,json=respondentId,proto3" json:"respondent_id,omitempty"`
	TimetableId  string `protobuf:"bytes,2,opt,name=timetable_id,json=timetableId,proto3" json:"timetable_id,omitempty"`
}

func (x *UpdateRespondentInquiryTimeTableRequest) Reset() {
	*x = UpdateRespondentInquiryTimeTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_respondent_inquiry_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRespondentInquiryTimeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRespondentInquiryTimeTableRequest) ProtoMessage() {}

func (x *UpdateRespondentInquiryTimeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_respondent_inquiry_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRespondentInquiryTimeTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateRespondentInquiryTimeTableRequest) Descriptor() ([]byte, []int) {
	return file_respondent_inquiry_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRespondentInquiryTimeTableRequest) GetRespondentId() string {
	if x != nil {
		return x.RespondentId
	}
	return ""
}

func (x *UpdateRespondentInquiryTimeTableRequest) GetTimetableId() string {
	if x != nil {
		return x.TimetableId
	}
	return ""
}

type UpdateStatusRespondentInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespondentId string `protobuf:"bytes,1,opt,name=respondent_id,json=respondentId,proto3" json:"respondent_id,omitempty"`
	InquiryId    string `protobuf:"bytes,2,opt,name=inquiry_id,json=inquiryId,proto3" json:"inquiry_id,omitempty"`
	StatusId     string `protobuf:"bytes,3,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
}

func (x *UpdateStatusRespondentInquiryRequest) Reset() {
	*x = UpdateStatusRespondentInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_respondent_inquiry_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusRespondentInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusRespondentInquiryRequest) ProtoMessage() {}

func (x *UpdateStatusRespondentInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_respondent_inquiry_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusRespondentInquiryRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusRespondentInquiryRequest) Descriptor() ([]byte, []int) {
	return file_respondent_inquiry_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateStatusRespondentInquiryRequest) GetRespondentId() string {
	if x != nil {
		return x.RespondentId
	}
	return ""
}

func (x *UpdateStatusRespondentInquiryRequest) GetInquiryId() string {
	if x != nil {
		return x.InquiryId
	}
	return ""
}

func (x *UpdateStatusRespondentInquiryRequest) GetStatusId() string {
	if x != nil {
		return x.StatusId
	}
	return ""
}

type GetRespondentCalendarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespondentId string `protobuf:"bytes,1,opt,name=respondent_id,json=respondentId,proto3" json:"respondent_id,omitempty"`
	FromDate     string `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate       string `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
}

func (x *GetRespondentCalendarRequest) Reset() {
	*x = GetRespondentCalendarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_respondent_inquiry_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRespondentCalendarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRespondentCalendarRequest) ProtoMessage() {}

func (x *GetRespondentCalendarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_respondent_inquiry_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRespondentCalendarRequest.ProtoReflect.Descriptor instead.
func (*GetRespondentCalendarRequest) Descriptor() ([]byte, []int) {
	return file_respondent_inquiry_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetRespondentCalendarRequest) GetRespondentId() string {
	if x != nil {
		return x.RespondentId
	}
	return ""
}

func (x *GetRespondentCalendarRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetRespondentCalendarRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

var File_respondent_inquiry_service_proto protoreflect.FileDescriptor

var file_respondent_inquiry_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x22,
	0x71, 0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x32, 0x82, 0x08, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72,
	0x79, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64,
	0x1a, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x42, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x27, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x42, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79,
	0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x6e, 0x71,
	0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f,
	0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x31, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x69, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e,
	0x64, 0x61, 0x72, 0x12, 0x26, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_respondent_inquiry_service_proto_rawDescOnce sync.Once
	file_respondent_inquiry_service_proto_rawDescData = file_respondent_inquiry_service_proto_rawDesc
)

func file_respondent_inquiry_service_proto_rawDescGZIP() []byte {
	file_respondent_inquiry_service_proto_rawDescOnce.Do(func() {
		file_respondent_inquiry_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_respondent_inquiry_service_proto_rawDescData)
	})
	return file_respondent_inquiry_service_proto_rawDescData
}

var file_respondent_inquiry_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_respondent_inquiry_service_proto_goTypes = []interface{}{
	(*GetAllRespondentInquiryRequest)(nil),          // 0: genproto.GetAllRespondentInquiryRequest
	(*UpdateRespondentInquiryTimeTableRequest)(nil), // 1: genproto.UpdateRespondentInquiryTimeTableRequest
	(*UpdateStatusRespondentInquiryRequest)(nil),    // 2: genproto.UpdateStatusRespondentInquiryRequest
	(*GetRespondentCalendarRequest)(nil),            // 3: genproto.GetRespondentCalendarRequest
	(*CreateRespondentInquiry)(nil),                 // 4: genproto.CreateRespondentInquiry
	(*RespondentInquiry)(nil),                       // 5: genproto.RespondentInquiry
	(*RespondentInquiryId)(nil),                     // 6: genproto.RespondentInquiryId
	(*UpdateRatingRequest)(nil),                     // 7: genproto.UpdateRatingRequest
	(*GetInquiryByRespondentRequest)(nil),           // 8: genproto.GetInquiryByRespondentRequest
	(*GetRespondentsByInquiryRequest)(nil),          // 9: genproto.GetRespondentsByInquiryRequest
	(*GetAllRespondentInquiryResponse)(nil),         // 10: genproto.GetAllRespondentInquiryResponse
	(*emptypb.Empty)(nil),                           // 11: google.protobuf.Empty
	(*GetAllInquiryResponse)(nil),                   // 12: genproto.GetAllInquiryResponse
	(*GetRespondentsByInquiryResponse)(nil),         // 13: genproto.GetRespondentsByInquiryResponse
	(*GetCalendarResponse)(nil),                     // 14: genproto.GetCalendarResponse
}
var file_respondent_inquiry_service_proto_depIdxs = []int32{
	4,  // 0: genproto.RespondentInquiryService.Create:input_type -> genproto.CreateRespondentInquiry
	5,  // 1: genproto.RespondentInquiryService.Update:input_type -> genproto.RespondentInquiry
	6,  // 2: genproto.RespondentInquiryService.Get:input_type -> genproto.RespondentInquiryId
	0,  // 3: genproto.RespondentInquiryService.GetAll:input_type -> genproto.GetAllRespondentInquiryRequest
	6,  // 4: genproto.RespondentInquiryService.Delete:input_type -> genproto.RespondentInquiryId
	7,  // 5: genproto.RespondentInquiryService.UpdateRespondentRating:input_type -> genproto.UpdateRatingRequest
	8,  // 6: genproto.RespondentInquiryService.GetInquiryByRespondent:input_type -> genproto.GetInquiryByRespondentRequest
	9,  // 7: genproto.RespondentInquiryService.GetRespondentsByInquiry:input_type -> genproto.GetRespondentsByInquiryRequest
	1,  // 8: genproto.RespondentInquiryService.UpdateRespondentInquiryTimeTable:input_type -> genproto.UpdateRespondentInquiryTimeTableRequest
	2,  // 9: genproto.RespondentInquiryService.UpdateRespondentInquiryStatus:input_type -> genproto.UpdateStatusRespondentInquiryRequest
	3,  // 10: genproto.RespondentInquiryService.GetRespondentCalendar:input_type -> genproto.GetRespondentCalendarRequest
	6,  // 11: genproto.RespondentInquiryService.Create:output_type -> genproto.RespondentInquiryId
	6,  // 12: genproto.RespondentInquiryService.Update:output_type -> genproto.RespondentInquiryId
	5,  // 13: genproto.RespondentInquiryService.Get:output_type -> genproto.RespondentInquiry
	10, // 14: genproto.RespondentInquiryService.GetAll:output_type -> genproto.GetAllRespondentInquiryResponse
	11, // 15: genproto.RespondentInquiryService.Delete:output_type -> google.protobuf.Empty
	11, // 16: genproto.RespondentInquiryService.UpdateRespondentRating:output_type -> google.protobuf.Empty
	12, // 17: genproto.RespondentInquiryService.GetInquiryByRespondent:output_type -> genproto.GetAllInquiryResponse
	13, // 18: genproto.RespondentInquiryService.GetRespondentsByInquiry:output_type -> genproto.GetRespondentsByInquiryResponse
	11, // 19: genproto.RespondentInquiryService.UpdateRespondentInquiryTimeTable:output_type -> google.protobuf.Empty
	11, // 20: genproto.RespondentInquiryService.UpdateRespondentInquiryStatus:output_type -> google.protobuf.Empty
	14, // 21: genproto.RespondentInquiryService.GetRespondentCalendar:output_type -> genproto.GetCalendarResponse
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_respondent_inquiry_service_proto_init() }
func file_respondent_inquiry_service_proto_init() {
	if File_respondent_inquiry_service_proto != nil {
		return
	}
	file_respondent_inquiry_proto_init()
	file_inquiry_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_respondent_inquiry_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRespondentInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_respondent_inquiry_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRespondentInquiryTimeTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_respondent_inquiry_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusRespondentInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_respondent_inquiry_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRespondentCalendarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_respondent_inquiry_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_respondent_inquiry_service_proto_goTypes,
		DependencyIndexes: file_respondent_inquiry_service_proto_depIdxs,
		MessageInfos:      file_respondent_inquiry_service_proto_msgTypes,
	}.Build()
	File_respondent_inquiry_service_proto = out.File
	file_respondent_inquiry_service_proto_rawDesc = nil
	file_respondent_inquiry_service_proto_goTypes = nil
	file_respondent_inquiry_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RespondentInquiryServiceClient is the client API for RespondentInquiryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RespondentInquiryServiceClient interface {
	Create(ctx context.Context, in *CreateRespondentInquiry, opts ...grpc.CallOption) (*RespondentInquiryId, error)
	Update(ctx context.Context, in *RespondentInquiry, opts ...grpc.CallOption) (*RespondentInquiryId, error)
	Get(ctx context.Context, in *RespondentInquiryId, opts ...grpc.CallOption) (*RespondentInquiry, error)
	GetAll(ctx context.Context, in *GetAllRespondentInquiryRequest, opts ...grpc.CallOption) (*GetAllRespondentInquiryResponse, error)
	Delete(ctx context.Context, in *RespondentInquiryId, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateRespondentRating(ctx context.Context, in *UpdateRatingRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetInquiryByRespondent(ctx context.Context, in *GetInquiryByRespondentRequest, opts ...grpc.CallOption) (*GetAllInquiryResponse, error)
	GetRespondentsByInquiry(ctx context.Context, in *GetRespondentsByInquiryRequest, opts ...grpc.CallOption) (*GetRespondentsByInquiryResponse, error)
	UpdateRespondentInquiryTimeTable(ctx context.Context, in *UpdateRespondentInquiryTimeTableRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateRespondentInquiryStatus(ctx context.Context, in *UpdateStatusRespondentInquiryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetRespondentCalendar(ctx context.Context, in *GetRespondentCalendarRequest, opts ...grpc.CallOption) (*GetCalendarResponse, error)
}

type respondentInquiryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRespondentInquiryServiceClient(cc grpc.ClientConnInterface) RespondentInquiryServiceClient {
	return &respondentInquiryServiceClient{cc}
}

func (c *respondentInquiryServiceClient) Create(ctx context.Context, in *CreateRespondentInquiry, opts ...grpc.CallOption) (*RespondentInquiryId, error) {
	out := new(RespondentInquiryId)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) Update(ctx context.Context, in *RespondentInquiry, opts ...grpc.CallOption) (*RespondentInquiryId, error) {
	out := new(RespondentInquiryId)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) Get(ctx context.Context, in *RespondentInquiryId, opts ...grpc.CallOption) (*RespondentInquiry, error) {
	out := new(RespondentInquiry)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) GetAll(ctx context.Context, in *GetAllRespondentInquiryRequest, opts ...grpc.CallOption) (*GetAllRespondentInquiryResponse, error) {
	out := new(GetAllRespondentInquiryResponse)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) Delete(ctx context.Context, in *RespondentInquiryId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) UpdateRespondentRating(ctx context.Context, in *UpdateRatingRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/UpdateRespondentRating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) GetInquiryByRespondent(ctx context.Context, in *GetInquiryByRespondentRequest, opts ...grpc.CallOption) (*GetAllInquiryResponse, error) {
	out := new(GetAllInquiryResponse)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/GetInquiryByRespondent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) GetRespondentsByInquiry(ctx context.Context, in *GetRespondentsByInquiryRequest, opts ...grpc.CallOption) (*GetRespondentsByInquiryResponse, error) {
	out := new(GetRespondentsByInquiryResponse)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/GetRespondentsByInquiry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) UpdateRespondentInquiryTimeTable(ctx context.Context, in *UpdateRespondentInquiryTimeTableRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/UpdateRespondentInquiryTimeTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) UpdateRespondentInquiryStatus(ctx context.Context, in *UpdateStatusRespondentInquiryRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/UpdateRespondentInquiryStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *respondentInquiryServiceClient) GetRespondentCalendar(ctx context.Context, in *GetRespondentCalendarRequest, opts ...grpc.CallOption) (*GetCalendarResponse, error) {
	out := new(GetCalendarResponse)
	err := c.cc.Invoke(ctx, "/genproto.RespondentInquiryService/GetRespondentCalendar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RespondentInquiryServiceServer is the server API for RespondentInquiryService service.
type RespondentInquiryServiceServer interface {
	Create(context.Context, *CreateRespondentInquiry) (*RespondentInquiryId, error)
	Update(context.Context, *RespondentInquiry) (*RespondentInquiryId, error)
	Get(context.Context, *RespondentInquiryId) (*RespondentInquiry, error)
	GetAll(context.Context, *GetAllRespondentInquiryRequest) (*GetAllRespondentInquiryResponse, error)
	Delete(context.Context, *RespondentInquiryId) (*emptypb.Empty, error)
	UpdateRespondentRating(context.Context, *UpdateRatingRequest) (*emptypb.Empty, error)
	GetInquiryByRespondent(context.Context, *GetInquiryByRespondentRequest) (*GetAllInquiryResponse, error)
	GetRespondentsByInquiry(context.Context, *GetRespondentsByInquiryRequest) (*GetRespondentsByInquiryResponse, error)
	UpdateRespondentInquiryTimeTable(context.Context, *UpdateRespondentInquiryTimeTableRequest) (*emptypb.Empty, error)
	UpdateRespondentInquiryStatus(context.Context, *UpdateStatusRespondentInquiryRequest) (*emptypb.Empty, error)
	GetRespondentCalendar(context.Context, *GetRespondentCalendarRequest) (*GetCalendarResponse, error)
}

// UnimplementedRespondentInquiryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRespondentInquiryServiceServer struct {
}

func (*UnimplementedRespondentInquiryServiceServer) Create(context.Context, *CreateRespondentInquiry) (*RespondentInquiryId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) Update(context.Context, *RespondentInquiry) (*RespondentInquiryId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) Get(context.Context, *RespondentInquiryId) (*RespondentInquiry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) GetAll(context.Context, *GetAllRespondentInquiryRequest) (*GetAllRespondentInquiryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) Delete(context.Context, *RespondentInquiryId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) UpdateRespondentRating(context.Context, *UpdateRatingRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRespondentRating not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) GetInquiryByRespondent(context.Context, *GetInquiryByRespondentRequest) (*GetAllInquiryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInquiryByRespondent not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) GetRespondentsByInquiry(context.Context, *GetRespondentsByInquiryRequest) (*GetRespondentsByInquiryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRespondentsByInquiry not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) UpdateRespondentInquiryTimeTable(context.Context, *UpdateRespondentInquiryTimeTableRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRespondentInquiryTimeTable not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) UpdateRespondentInquiryStatus(context.Context, *UpdateStatusRespondentInquiryRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRespondentInquiryStatus not implemented")
}
func (*UnimplementedRespondentInquiryServiceServer) GetRespondentCalendar(context.Context, *GetRespondentCalendarRequest) (*GetCalendarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRespondentCalendar not implemented")
}

func RegisterRespondentInquiryServiceServer(s *grpc.Server, srv RespondentInquiryServiceServer) {
	s.RegisterService(&_RespondentInquiryService_serviceDesc, srv)
}

func _RespondentInquiryService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRespondentInquiry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).Create(ctx, req.(*CreateRespondentInquiry))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondentInquiry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).Update(ctx, req.(*RespondentInquiry))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondentInquiryId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).Get(ctx, req.(*RespondentInquiryId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRespondentInquiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).GetAll(ctx, req.(*GetAllRespondentInquiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondentInquiryId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).Delete(ctx, req.(*RespondentInquiryId))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_UpdateRespondentRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).UpdateRespondentRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/UpdateRespondentRating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).UpdateRespondentRating(ctx, req.(*UpdateRatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_GetInquiryByRespondent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInquiryByRespondentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).GetInquiryByRespondent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/GetInquiryByRespondent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).GetInquiryByRespondent(ctx, req.(*GetInquiryByRespondentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_GetRespondentsByInquiry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRespondentsByInquiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).GetRespondentsByInquiry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/GetRespondentsByInquiry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).GetRespondentsByInquiry(ctx, req.(*GetRespondentsByInquiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_UpdateRespondentInquiryTimeTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRespondentInquiryTimeTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).UpdateRespondentInquiryTimeTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/UpdateRespondentInquiryTimeTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).UpdateRespondentInquiryTimeTable(ctx, req.(*UpdateRespondentInquiryTimeTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_UpdateRespondentInquiryStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusRespondentInquiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).UpdateRespondentInquiryStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/UpdateRespondentInquiryStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).UpdateRespondentInquiryStatus(ctx, req.(*UpdateStatusRespondentInquiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RespondentInquiryService_GetRespondentCalendar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRespondentCalendarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RespondentInquiryServiceServer).GetRespondentCalendar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.RespondentInquiryService/GetRespondentCalendar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RespondentInquiryServiceServer).GetRespondentCalendar(ctx, req.(*GetRespondentCalendarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RespondentInquiryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.RespondentInquiryService",
	HandlerType: (*RespondentInquiryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RespondentInquiryService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RespondentInquiryService_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _RespondentInquiryService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _RespondentInquiryService_GetAll_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RespondentInquiryService_Delete_Handler,
		},
		{
			MethodName: "UpdateRespondentRating",
			Handler:    _RespondentInquiryService_UpdateRespondentRating_Handler,
		},
		{
			MethodName: "GetInquiryByRespondent",
			Handler:    _RespondentInquiryService_GetInquiryByRespondent_Handler,
		},
		{
			MethodName: "GetRespondentsByInquiry",
			Handler:    _RespondentInquiryService_GetRespondentsByInquiry_Handler,
		},
		{
			MethodName: "UpdateRespondentInquiryTimeTable",
			Handler:    _RespondentInquiryService_UpdateRespondentInquiryTimeTable_Handler,
		},
		{
			MethodName: "UpdateRespondentInquiryStatus",
			Handler:    _RespondentInquiryService_UpdateRespondentInquiryStatus_Handler,
		},
		{
			MethodName: "GetRespondentCalendar",
			Handler:    _RespondentInquiryService_GetRespondentCalendar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "respondent_inquiry_service.proto",
}
