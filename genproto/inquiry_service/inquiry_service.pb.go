// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: inquiry_service.proto

package inquiry_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllInquiryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset       int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit        int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StatusId     string `protobuf:"bytes,4,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	ResearcherId string `protobuf:"bytes,5,opt,name=researcher_id,json=researcherId,proto3" json:"researcher_id,omitempty"`
	CompanyId    string `protobuf:"bytes,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
}

func (x *GetAllInquiryRequest) Reset() {
	*x = GetAllInquiryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inquiry_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllInquiryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllInquiryRequest) ProtoMessage() {}

func (x *GetAllInquiryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inquiry_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllInquiryRequest.ProtoReflect.Descriptor instead.
func (*GetAllInquiryRequest) Descriptor() ([]byte, []int) {
	return file_inquiry_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllInquiryRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAllInquiryRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllInquiryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAllInquiryRequest) GetStatusId() string {
	if x != nil {
		return x.StatusId
	}
	return ""
}

func (x *GetAllInquiryRequest) GetResearcherId() string {
	if x != nil {
		return x.ResearcherId
	}
	return ""
}

func (x *GetAllInquiryRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

var File_inquiry_service_proto protoreflect.FileDescriptor

var file_inquiry_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x32, 0xf0, 0x02, 0x0a, 0x0e, 0x49, 0x6e,
	0x71, 0x75, 0x69, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x1a, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64, 0x22, 0x00,
	0x12, 0x32, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x1a, 0x13, 0x2e,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x49, 0x64, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49, 0x64,
	0x1a, 0x11, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12,
	0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x49,
	0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74,
	0x65, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inquiry_service_proto_rawDescOnce sync.Once
	file_inquiry_service_proto_rawDescData = file_inquiry_service_proto_rawDesc
)

func file_inquiry_service_proto_rawDescGZIP() []byte {
	file_inquiry_service_proto_rawDescOnce.Do(func() {
		file_inquiry_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_inquiry_service_proto_rawDescData)
	})
	return file_inquiry_service_proto_rawDescData
}

var file_inquiry_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_inquiry_service_proto_goTypes = []interface{}{
	(*GetAllInquiryRequest)(nil),  // 0: genproto.GetAllInquiryRequest
	(*Inquiry)(nil),               // 1: genproto.Inquiry
	(*InquiryId)(nil),             // 2: genproto.InquiryId
	(*StatusNotes)(nil),           // 3: genproto.StatusNotes
	(*GetAllInquiryResponse)(nil), // 4: genproto.GetAllInquiryResponse
	(*emptypb.Empty)(nil),         // 5: google.protobuf.Empty
}
var file_inquiry_service_proto_depIdxs = []int32{
	1, // 0: genproto.InquiryService.Create:input_type -> genproto.Inquiry
	1, // 1: genproto.InquiryService.Update:input_type -> genproto.Inquiry
	2, // 2: genproto.InquiryService.Get:input_type -> genproto.InquiryId
	0, // 3: genproto.InquiryService.GetAll:input_type -> genproto.GetAllInquiryRequest
	2, // 4: genproto.InquiryService.Delete:input_type -> genproto.InquiryId
	3, // 5: genproto.InquiryService.UpdateStatus:input_type -> genproto.StatusNotes
	2, // 6: genproto.InquiryService.Create:output_type -> genproto.InquiryId
	2, // 7: genproto.InquiryService.Update:output_type -> genproto.InquiryId
	1, // 8: genproto.InquiryService.Get:output_type -> genproto.Inquiry
	4, // 9: genproto.InquiryService.GetAll:output_type -> genproto.GetAllInquiryResponse
	5, // 10: genproto.InquiryService.Delete:output_type -> google.protobuf.Empty
	5, // 11: genproto.InquiryService.UpdateStatus:output_type -> google.protobuf.Empty
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_inquiry_service_proto_init() }
func file_inquiry_service_proto_init() {
	if File_inquiry_service_proto != nil {
		return
	}
	file_inquiry_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_inquiry_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllInquiryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inquiry_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inquiry_service_proto_goTypes,
		DependencyIndexes: file_inquiry_service_proto_depIdxs,
		MessageInfos:      file_inquiry_service_proto_msgTypes,
	}.Build()
	File_inquiry_service_proto = out.File
	file_inquiry_service_proto_rawDesc = nil
	file_inquiry_service_proto_goTypes = nil
	file_inquiry_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InquiryServiceClient is the client API for InquiryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InquiryServiceClient interface {
	Create(ctx context.Context, in *Inquiry, opts ...grpc.CallOption) (*InquiryId, error)
	Update(ctx context.Context, in *Inquiry, opts ...grpc.CallOption) (*InquiryId, error)
	Get(ctx context.Context, in *InquiryId, opts ...grpc.CallOption) (*Inquiry, error)
	GetAll(ctx context.Context, in *GetAllInquiryRequest, opts ...grpc.CallOption) (*GetAllInquiryResponse, error)
	Delete(ctx context.Context, in *InquiryId, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateStatus(ctx context.Context, in *StatusNotes, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type inquiryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInquiryServiceClient(cc grpc.ClientConnInterface) InquiryServiceClient {
	return &inquiryServiceClient{cc}
}

func (c *inquiryServiceClient) Create(ctx context.Context, in *Inquiry, opts ...grpc.CallOption) (*InquiryId, error) {
	out := new(InquiryId)
	err := c.cc.Invoke(ctx, "/genproto.InquiryService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inquiryServiceClient) Update(ctx context.Context, in *Inquiry, opts ...grpc.CallOption) (*InquiryId, error) {
	out := new(InquiryId)
	err := c.cc.Invoke(ctx, "/genproto.InquiryService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inquiryServiceClient) Get(ctx context.Context, in *InquiryId, opts ...grpc.CallOption) (*Inquiry, error) {
	out := new(Inquiry)
	err := c.cc.Invoke(ctx, "/genproto.InquiryService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inquiryServiceClient) GetAll(ctx context.Context, in *GetAllInquiryRequest, opts ...grpc.CallOption) (*GetAllInquiryResponse, error) {
	out := new(GetAllInquiryResponse)
	err := c.cc.Invoke(ctx, "/genproto.InquiryService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inquiryServiceClient) Delete(ctx context.Context, in *InquiryId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.InquiryService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inquiryServiceClient) UpdateStatus(ctx context.Context, in *StatusNotes, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/genproto.InquiryService/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InquiryServiceServer is the server API for InquiryService service.
type InquiryServiceServer interface {
	Create(context.Context, *Inquiry) (*InquiryId, error)
	Update(context.Context, *Inquiry) (*InquiryId, error)
	Get(context.Context, *InquiryId) (*Inquiry, error)
	GetAll(context.Context, *GetAllInquiryRequest) (*GetAllInquiryResponse, error)
	Delete(context.Context, *InquiryId) (*emptypb.Empty, error)
	UpdateStatus(context.Context, *StatusNotes) (*emptypb.Empty, error)
}

// UnimplementedInquiryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInquiryServiceServer struct {
}

func (*UnimplementedInquiryServiceServer) Create(context.Context, *Inquiry) (*InquiryId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedInquiryServiceServer) Update(context.Context, *Inquiry) (*InquiryId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedInquiryServiceServer) Get(context.Context, *InquiryId) (*Inquiry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedInquiryServiceServer) GetAll(context.Context, *GetAllInquiryRequest) (*GetAllInquiryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedInquiryServiceServer) Delete(context.Context, *InquiryId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedInquiryServiceServer) UpdateStatus(context.Context, *StatusNotes) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatus not implemented")
}

func RegisterInquiryServiceServer(s *grpc.Server, srv InquiryServiceServer) {
	s.RegisterService(&_InquiryService_serviceDesc, srv)
}

func _InquiryService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Inquiry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InquiryServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.InquiryService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InquiryServiceServer).Create(ctx, req.(*Inquiry))
	}
	return interceptor(ctx, in, info, handler)
}

func _InquiryService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Inquiry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InquiryServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.InquiryService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InquiryServiceServer).Update(ctx, req.(*Inquiry))
	}
	return interceptor(ctx, in, info, handler)
}

func _InquiryService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InquiryId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InquiryServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.InquiryService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InquiryServiceServer).Get(ctx, req.(*InquiryId))
	}
	return interceptor(ctx, in, info, handler)
}

func _InquiryService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllInquiryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InquiryServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.InquiryService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InquiryServiceServer).GetAll(ctx, req.(*GetAllInquiryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InquiryService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InquiryId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InquiryServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.InquiryService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InquiryServiceServer).Delete(ctx, req.(*InquiryId))
	}
	return interceptor(ctx, in, info, handler)
}

func _InquiryService_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusNotes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InquiryServiceServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genproto.InquiryService/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InquiryServiceServer).UpdateStatus(ctx, req.(*StatusNotes))
	}
	return interceptor(ctx, in, info, handler)
}

var _InquiryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genproto.InquiryService",
	HandlerType: (*InquiryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _InquiryService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _InquiryService_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _InquiryService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _InquiryService_GetAll_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _InquiryService_Delete_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _InquiryService_UpdateStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inquiry_service.proto",
}
